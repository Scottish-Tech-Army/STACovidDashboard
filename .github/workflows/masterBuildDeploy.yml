# Build, test and deploy to live the master branch on push or PR merge
# Requires manual approval after functional tests run successfully on staging
# Uses the following AWS CodeBuild projects: dashboardbuild, dashboardStagingFunctionalTests

name: Master Build Test and Deploy

on:
  # Triggers the workflow on push event (which should include PR merges) for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Build and deploy the candidate to staging
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "AWS CodeBuild Build"
        id: covid-dashboard-merge-build
        uses: aws-actions/aws-codebuild-run-build@v1.0.3
        with:
          # AWS CodeBuild Project Name
          project-name: covid-dashboard-merge-build

      - name: CodeBuild output 
        run: |
          echo AWS BuildId: ${{ steps.covid-dashboard-merge-build.outputs.aws-build-id}}
          echo S3 build archive: s3://sta-dashboard-builds/builds/master/$GITHUB_SHA/
          echo S3 staging deployment: s3://sta-dashboard-staging

  # Run functional tests against staging
  functionalTests:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "AWS CodeBuild Functional Tests"
        uses: aws-actions/aws-codebuild-run-build@v1.0.3
        with:
          # AWS CodeBuild Project Name
          project-name: covid-dashboard-staging-functional-tests

  deployToLive:
    needs: [build,functionalTests]
    environment: 
      name: Live
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy build to live
        run: aws s3 cp s3://sta-dashboard-builds/builds/master/$GITHUB_SHA/ s3://sta-dashboard-livetest/ --recursive
        
